üîπ O que s√£o Resources no Terraform?
No Terraform, resources s√£o os blocos fundamentais usados para criar e gerenciar a infraestrutura. Cada recurso representa um objeto da infraestrutura que o Terraform pode provisionar, como:

Uma inst√¢ncia EC2 na AWS.

Um bucket S3.

Uma m√°quina virtual no Azure.

Uma regra de firewall no GCP.

Entre muitos outros.

üìå Estrutura de um recurso:
hcl
Copy
Edit
resource "<PROVEDOR>_<TIPO_RECURSO>" "<NOME_LOCAL>" {
  # Argumentos de configura√ß√£o do recurso
}
resource: palavra-chave obrigat√≥ria.

<PROVEDOR>_<TIPO_RECURSO>: identifica o tipo de recurso e de qual provedor (ex: aws_instance).

<NOME_LOCAL>: nome local usado para referenciar esse recurso em outros blocos.

‚úÖ Exemplo Pr√°tico 1: Criando uma inst√¢ncia EC2 na AWS
hcl
Copy
Edit
provider "aws" {
  region = "us-east-1"
}

resource "aws_instance" "exemplo_ec2" {
  ami           = "ami-0c55b159cbfafe1f0" # Amazon Linux 2 AMI
  instance_type = "t2.micro"

  tags = {
    Name = "MinhaPrimeiraEC2"
  }
}
Esse recurso cria uma inst√¢ncia EC2 usando uma AMI e tipo t2.micro.

A inst√¢ncia recebe uma tag Name = "MinhaPrimeiraEC2".

‚úÖ Exemplo Pr√°tico 2: Criando um bucket S3
hcl
Copy
Edit
resource "aws_s3_bucket" "meu_bucket" {
  bucket = "thiago-curso-terraform-bucket"
  acl    = "private"
}
üß† Dicas Importantes:
Todo recurso deve ter ID √∫nico, por isso o bucket precisa ser globalmente √∫nico no S3.

Voc√™ pode referenciar recursos entre si com "nome_do_recurso.nome_local.atributo".

A estrutura HCL (HashiCorp Configuration Language) permite interpola√ß√£o e uso de vari√°veis para modularidade.